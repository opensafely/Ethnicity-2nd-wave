-------------------------------------------------------------------------------
      name:  <unnamed>
       log:  /workspace/logs/03d_eth_table1_eth5_carehomes.log
  log type:  text
<<<<<<< HEAD
 opened on:  12 Jan 2021, 18:15:46
=======
 opened on:  12 Jan 2021, 17:42:29
>>>>>>> 5e9e55827e7f9f17e7a5ff7e784ae1ad6d7ae9d4

. 
. * Open Stata dataset
. use ./output/analysis_dataset.dta, clear

. keep if carehome==1
<<<<<<< HEAD
(67,059 observations deleted)
=======
(6,692 observations deleted)
>>>>>>> 5e9e55827e7f9f17e7a5ff7e784ae1ad6d7ae9d4

. safetab eth5,m 
5

      Eth 5 |
 categories |      Freq.     Percent        Cum.
------------+-----------------------------------
<<<<<<< HEAD
      White |      1,678       14.49       14.49
South Asian |      1,742       15.04       29.53
      Black |      1,692       14.61       44.14
      Mixed |      1,763       15.22       59.36
      Other |      1,761       15.20       74.56
    Unknown |      2,946       25.44      100.00
------------+-----------------------------------
      Total |     11,582      100.00
=======
      White |        173       15.27       15.27
South Asian |        152       13.42       28.68
      Black |        163       14.39       43.07
      Mixed |        190       16.77       59.84
      Other |        161       14.21       74.05
    Unknown |        294       25.95      100.00
------------+-----------------------------------
      Total |      1,133      100.00
>>>>>>> 5e9e55827e7f9f17e7a5ff7e784ae1ad6d7ae9d4

. 
.  /* PROGRAMS TO AUTOMATE TABULATIONS=========================================
> ==*/ 
. 
. *****************************************************************************
> ***
. * All below code from K Baskharan 
. * Generic code to output one row of table
. 
. cap prog drop generaterow

. program define generaterow
  1. syntax, variable(varname) condition(string) 
  2.         
.         qui cou
  3.         local overalldenom=r(N)
  4.         
.         qui sum `variable' if `variable' `condition'
  5.         file write tablecontent (r(max)) _tab
  6.         
.         qui cou   if `variable' `condition'
  7.         local rowdenom = r(N)
  8.         local colpct = 100*(r(N)/`overalldenom')
  9.         file write tablecontent %9.0gc (`rowdenom')  (" (") %3.1f (`colpct
> ') (")") _tab
 10. 
.         forvalues i=1/6{
 11.         qui cou if eth5 == `i'
 12.         local rowdenom = r(N)
 13.         qui cou if eth5 == `i' & `variable' `condition'
 14.         local pct = 100*(r(N)/`rowdenom') 
 15.         file write tablecontent %9.0gc (r(N)) (" (") %3.1f (`pct') (")") _
> tab
 16.         }
 17.         
.         file write tablecontent _n
 18. end

. 
. 
. * Output one row of table for co-morbidities and meds
. 
. cap prog drop generaterow2

. program define generaterow2
  1. syntax, variable(varname) condition(string) 
  2.         
.         qui cou
  3.         local overalldenom=r(N)
  4.         
.         qui cou if `variable' `condition'
  5.         local rowdenom = r(N)
  6.         local colpct = 100*(r(N)/`overalldenom')
  7.         file write tablecontent %9.0gc (`rowdenom')  (" (") %3.1f (`colpct
> ') (")") _tab
  8. 
.         forvalues i=1/6{
  9.         qui cou if eth5 == `i'
 10.         local rowdenom = r(N)
 11.         qui cou if eth5 == `i' & `variable' `condition'
 12.         local pct = 100*(r(N)/`rowdenom') 
 13.         file write tablecontent %9.0gc (r(N)) (" (") %3.1f (`pct') (")") _
> tab
 14.         }
 15.         
.         file write tablecontent _n
 16. end

. 
. 
. 
. /* Explanatory Notes 
> 
> defines a program (SAS macro/R function equivalent), generate row
> the syntax row specifies two inputs for the program: 
> 
>         a VARNAME which is your variable 
>         a CONDITION which is a string of some condition you impose 
>         
> the program counts if variable and condition and returns the counts
> column percentages are then automatically generated
> this is then written to the text file 'tablecontent' 
> the number followed by space, brackets, formatted pct, end bracket and then t
> ab
> 
> the format %3.1f specifies length of 3, followed by 1 dp. 
> 
> */ 
. 
. *****************************************************************************
> ***
. * Generic code to output one section (varible) within table (calls above)
. 
. cap prog drop tabulatevariable

. prog define tabulatevariable
  1. syntax, variable(varname) min(real) max(real) [missing]
  2. 
.         local lab: variable label `variable'
  3.         file write tablecontent ("`lab'") _n 
  4. 
.         forvalues varlevel = `min'/`max'{ 
  5.                 generaterow, variable(`variable') condition("==`varlevel'"
> )
  6.         }
  7.         
.         if "`missing'"!="" generaterow, variable(`variable') condition("== 12
> ")
  8.         
. 
. 
. end

. 
. *****************************************************************************
> ***
. 
. /* Explanatory Notes 
> 
> defines program tabulate variable 
> syntax is : 
> 
>         - a VARNAME which you stick in variable 
>         - a numeric minimum 
>         - a numeric maximum 
>         - optional missing option, default value is . 
> 
> forvalues lowest to highest of the variable, manually set for each var
> run the generate row program for the level of the variable 
> if there is a missing specified, then run the generate row for missing vals
> 
> */ 
. 
. *****************************************************************************
> ***
. * Generic code to qui summarize a continous variable 
. 
. cap prog drop summarizevariable 

. prog define summarizevariable
  1. syntax, variable(varname) 
  2. 
.         local lab: variable label `variable'
  3.         file write tablecontent ("`lab'") _n 
  4. 
. 
.         qui summarize `variable', d
  5.         file write tablecontent ("Mean (SD)") _tab 
  6.         file write tablecontent  %3.1f (r(mean)) (" (") %3.1f (r(sd)) (")"
> ) _tab
  7.         
.         forvalues i=1/6{                                                     
>    
  8.         qui summarize `variable' if eth5 == `i', d
  9.         file write tablecontent  %3.1f (r(mean)) (" (") %3.1f (r(sd)) (")"
> ) _tab
 10.         }
 11. 
. file write tablecontent _n
 12. 
.         
.         qui summarize `variable', d
 13.         file write tablecontent ("Median (IQR)") _tab 
 14.         file write tablecontent %3.1f (r(p50)) (" (") %3.1f (r(p25)) ("-")
>  %3.1f (r(p75)) (")") _tab
 15.         
.         forvalues i=1/6{
 16.         qui summarize `variable' if eth5 == `i', d
 17.         file write tablecontent %3.1f (r(p50)) (" (") %3.1f (r(p25)) ("-")
>  %3.1f (r(p75)) (")") _tab
 18.         }
 19.         
. file write tablecontent _n
 20.         
. end

. 
. /* INVOKE PROGRAMS FOR TABLE 1===============================================
> =*/ 
. 
. *Set up output file
. cap file close tablecontent

. file open tablecontent using ./output/table1_eth5_carehomes.txt, write text r
> eplace
(note: file ./output/table1_eth5_carehomes.txt not found)

. 
. file write tablecontent ("Table 1: Demographic and Clinical Characteristics- 
> Care Home Population") _n

. 
. * eth5 labelled columns
. 
. local lab1: label eth5 1

. local lab2: label eth5 2

. local lab3: label eth5 3

. local lab4: label eth5 4

. local lab5: label eth5 5

. local lab6: label eth5 6

. 
. 
. 
. file write tablecontent _tab ("Total")                                       
>              _tab ///
>                                                          ("`lab1'")          
>                                      _tab ///
>                                                          ("`lab2'")          
>                                      _tab ///
>                                                          ("`lab3'")          
>                                      _tab ///
>                                                          ("`lab4'")          
>                                      _tab ///
>                                                          ("`lab5'")          
>                                      _tab ///
>                                                          ("`lab6'")          
>                                      _n                                      
>                

.                                                          
. 
. 
. * DEMOGRAPHICS (more than one level, potentially missing) 
. 
. format hba1c_pct bmi egfr %9.2f

. 
. 
. gen byte Denominator=1

. qui tabulatevariable, variable(Denominator) min(1) max(1) 

. file write tablecontent _n 

. 
. qui summarizevariable, variable(age) 

. file write tablecontent _n

. 
. qui tabulatevariable, variable(male) min(0) max(1) 

. file write tablecontent _n 

. 
. qui tabulatevariable, variable(imd) min(1) max(5) 

. file write tablecontent _n 

. 
. qui summarizevariable, variable(hh_size)

. file write tablecontent _n

. 
. qui tabulatevariable, variable(hh_total_cat) min(1) max(9) missing

. file write tablecontent _n 

. 
. qui summarizevariable, variable(gp_consult_count) 

. file write tablecontent _n 

. 
. qui tabulatevariable, variable(smoke_nomiss) min(1) max(3)  

. file write tablecontent _n 

. 
. qui summarizevariable, variable(bmi)

. file write tablecontent _n

. 
. qui tabulatevariable, variable(bmicat_sa) min(1) max(7) 

. file write tablecontent _n 

. 
. qui summarizevariable, variable(hba1c_pct)

. file write tablecontent _n

. 
. qui summarizevariable, variable(hba1c_mmol_per_mol)

. file write tablecontent _n

. 
. qui tabulatevariable, variable(hba1ccat) min(0) max(5)  

. file write tablecontent _n 

. 
. qui summarizevariable, variable(bp_sys) 

. file write tablecontent _n

. 
. qui summarizevariable, variable(bp_dias) 

. file write tablecontent _n

. 
. qui tabulatevariable, variable(bp_cat) min(1) max(5)  

. file write tablecontent _n 

. 
. qui tabulatevariable, variable(dm_type) min(0) max(3)  

. file write tablecontent _n 

. 
. * COMORBIDITIES (binary)
. qui summarizevariable, variable(comorbidity_count)

. file write tablecontent _n

. 
. foreach comorb of varlist               ///
>         hypertension                            ///
>         chronic_cardiac_disease         ///
>         stroke                                          ///
>         egfr60                                                  ///
>         esrf                                            ///
>         cancer                                          ///
>         ra_sle_psoriasis                        ///
>         immunosuppressed                        ///
>         chronic_liver_disease           ///
>         dementia                                        ///
>         other_neuro                                     ///
>         asthma                                          ///
>         chronic_respiratory_disease ///
>         { 
  2.         local comorb: subinstr local comorb "i." ""
  3.         local lab: variable label `comorb'
  4.         file write tablecontent ("`lab'") _tab
  5.                                                                 
.         generaterow2, variable(`comorb') condition("==1")
  6.         file write tablecontent _n _n
  7. }

. 
. ** OTHER TREATMENT VARIABLES (binary)
. foreach treat of varlist ///
>         combination_bp_meds     ///
>         statin                          ///
>         insulin                         ///
>                                                 {               
  2. 
. local lab: variable label `treat'
  3. file write tablecontent ("`lab'") _tab
  4.         
. generaterow2, variable(`treat') condition("==1")
  5. 
. file write tablecontent _n
  6. }

. 
. qui tabulatevariable, variable(dm_type_exeter_os) min(0) max(2)  

. file write tablecontent _n 

. 
. file close tablecontent

. 
. * Close log file 
. log close
      name:  <unnamed>
       log:  /workspace/logs/03d_eth_table1_eth5_carehomes.log
  log type:  text
<<<<<<< HEAD
 closed on:  12 Jan 2021, 18:15:50
=======
 closed on:  12 Jan 2021, 17:42:29
>>>>>>> 5e9e55827e7f9f17e7a5ff7e784ae1ad6d7ae9d4
-------------------------------------------------------------------------------
